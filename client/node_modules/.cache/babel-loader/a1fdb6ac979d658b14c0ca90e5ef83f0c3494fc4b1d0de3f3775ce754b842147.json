{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Git/spg-movie-app/client/src/pages/SavedMovies.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { QUERY_ME } from '../utils/queries';\nimport { REMOVE_MOVIE } from '../utils/mutations';\nimport { removeMovieId } from '../utils/localStorage';\nimport { useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SavedMovies = () => {\n  _s();\n  const {\n    loading,\n    data: userData\n  } = useQuery(QUERY_ME);\n  const savedMovies = userData === null || userData === void 0 ? void 0 : userData.me.SavedMovies;\n  const [removeMovie] = useMutation(REMOVE_MOVIE, {\n    refetchQueries: [{\n      query: QUERY_ME\n    }]\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  const handleDeleteMovie = async movieId => {\n    try {\n      removeMovieId(movieId);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"text-light bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Viewing saved movies!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: savedMovies.length ? `Viewing ${savedMovies.length} saved ${savedMovies.length === 1 ? 'movie' : 'movies'}:` : 'You have no saved movies!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n        children: savedMovies.map(movie => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            border: \"dark\",\n            children: [movie.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: movie.image,\n              alt: `The cover for ${movie.title}`,\n              variant: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 32\n            }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small\",\n                children: [\"Authors: \", movie.authors]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: movie.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block btn-danger\",\n                onClick: () => handleDeleteMovie(movie.movieId),\n                children: \"Delete this Movie!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"google-link\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: movie.link,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: \"View in The Movie Database\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, movie.movieId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SavedMovies, \"xcmvSoasZBz4WcNfTc9YJA1Dky8=\", false, function () {\n  return [useQuery, useMutation];\n});\n_c = SavedMovies;\nexport default SavedMovies;\nvar _c;\n$RefreshReg$(_c, \"SavedMovies\");","map":{"version":3,"names":["React","useMutation","Jumbotron","Container","CardColumns","Card","Button","QUERY_ME","REMOVE_MOVIE","removeMovieId","useQuery","SavedMovies","loading","data","userData","savedMovies","me","removeMovie","refetchQueries","query","handleDeleteMovie","movieId","e","console","error","length","map","movie","image","title","authors","description","link"],"sources":["/Users/mike/Git/spg-movie-app/client/src/pages/SavedMovies.js"],"sourcesContent":["import React from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { QUERY_ME } from '../utils/queries';\nimport { REMOVE_MOVIE } from '../utils/mutations';\nimport { removeMovieId } from '../utils/localStorage';\nimport { useQuery } from '@apollo/client';\n\n\nconst SavedMovies = () => {\n\n  const { loading, data: userData } = useQuery(QUERY_ME);\n\n  const savedMovies = userData?.me.SavedMovies;\n\n  const [removeMovie] = useMutation(REMOVE_MOVIE, {\n    refetchQueries: [\n      {query: QUERY_ME}\n    ]\n  });\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const handleDeleteMovie = async (movieId) => {\n\n    try {\n      removeMovieId(movieId);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved movies!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {savedMovies.length\n            ? `Viewing ${savedMovies.length} saved ${savedMovies.length === 1 ? 'movie' : 'movies'}:`\n            : 'You have no saved movies!'}\n        </h2>\n        <CardColumns>\n          {savedMovies.map((movie) => {\n            return (\n              <Card key={movie.movieId} border='dark'>\n                {movie.image ? <Card.Img src={movie.image} alt={`The cover for ${movie.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{movie.title}</Card.Title>\n                  <p className='small'>Authors: {movie.authors}</p>\n                  <Card.Text>{movie.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteMovie(movie.movieId)}>\n                    Delete this Movie!\n                  </Button>\n                  <div className='google-link'>\n                    <a href={movie.link} target='_blank' rel='noopener noreferrer'>View in The Movie Database</a>\n                  </div>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedMovies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}